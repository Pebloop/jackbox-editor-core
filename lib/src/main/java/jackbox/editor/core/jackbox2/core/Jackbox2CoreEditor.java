/**
 * This Java source file was generated by the Gradle 'init' task.
 */
package jackbox.editor.core.jackbox2.core;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.jpexs.decompiler.flash.SWF;
import com.jpexs.decompiler.flash.tags.DefineEditTextTag;
import com.jpexs.decompiler.flash.tags.Tag;
import com.jpexs.decompiler.flash.tags.base.CharacterIdTag;
import com.jpexs.decompiler.flash.tags.base.TextTag;

import java.io.*;

public class Jackbox2CoreEditor {
    SWF swfGamePicker;

    public Jackbox2CoreEditor(InputStream fileGamePicker) throws IOException, InterruptedException {
        this.swfGamePicker = new SWF(fileGamePicker, true);
    }

    public String getData() throws IOException, InterruptedException {

        JackBox2CoreForm form = new JackBox2CoreForm();

        //Process all tags
        for (Tag t : this.swfGamePicker.getTags()) {
            if (t instanceof DefineEditTextTag) {  //Print character id with the tag if it has any
                System.out.println("Tag " + t.getTagName() + " [" + t.getName() + "]" + " (" + ((TextTag) t).getTexts() + ")");
                // Apply the tag to the form
                switch (t.getName()) {
                    case Jackbox2CoreIds.GamePicker.BACK:
                        form.back = ((DefineEditTextTag) t).getTexts().get(0);
                        break;
                    case Jackbox2CoreIds.GamePicker.PHONE_OR_TABLET:
                        form.phoneOrTablet = ((DefineEditTextTag) t).getTexts().get(0);
                        break;
                }
            } else {
                //System.out.println("Tag " + t.getTagName() + " [" + t.getName() + "]");
            }
        }

        String json = new ObjectMapper().writeValueAsString(form);
        return json;
    }

    public byte[] modifyData(String json) throws IOException {
        JackBox2CoreForm form = new ObjectMapper().readValue(json, JackBox2CoreForm.class);

        for (Tag t : this.swfGamePicker.getTags()) {
            if (t instanceof DefineEditTextTag) {  //Print character id with the tag if it has any
                // Apply the tag to the form
                switch (t.getName()) {
                    case Jackbox2CoreIds.GamePicker.BACK:
                        ((DefineEditTextTag) t).initialText = form.back;
                        t.setModified(true);
                        break;
                    case Jackbox2CoreIds.GamePicker.PHONE_OR_TABLET:
                        ((DefineEditTextTag) t).initialText = form.phoneOrTablet;
                        t.setModified(true);
                }
            } else {
            }
        }

        OutputStream os = new FileOutputStream("./GamePicker.swf");
        try {
            this.swfGamePicker.saveTo(os);
        } catch (IOException e) {
            System.out.println("ERROR: Error during SWF saving");
        }
        os.close();
        File file = new File("./GamePicker.swf");
        InputStream is = new FileInputStream(file);
        return is.readAllBytes();
    }
}
