/**
 * This Java source file was generated by the Gradle 'init' task.
 */
package jackbox.editor.core.editors.jackbox2.core;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.jpexs.decompiler.flash.SWF;
import com.jpexs.decompiler.flash.abc.ScriptPack;
import com.jpexs.decompiler.flash.abc.types.ScriptInfo;
import com.jpexs.decompiler.flash.tags.DefineEditTextTag;
import com.jpexs.decompiler.flash.tags.Tag;
import com.jpexs.decompiler.flash.tags.base.TextTag;
import jackbox.editor.core.utils.SwfEditor;

import java.io.*;
import java.util.Collections;
import java.util.List;

public class Jackbox2CoreEditor {
    SWF swfGamePicker;

    public Jackbox2CoreEditor(InputStream fileGamePicker) throws IOException, InterruptedException {
        this.swfGamePicker = new SWF(fileGamePicker, true);
    }

    public String getData() throws Exception {

        JackBox2CoreForm form = new JackBox2CoreForm();
        SwfEditor swfEditor = new SwfEditor(this.swfGamePicker);

        //Process all tags
        form.back = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.BACK);
        form.phoneOrTablet = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.PHONE_OR_TABLET);
        form.familyMode = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.FAMILY_MODE);
        form.optionalContentFilter = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.OPTIONAL_CONTENT_FILTER);
        form.audience = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.AUDIENCE);
        form.nonPlayerCanJoin = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.NON_PLAYER_CAN_JOIN);
        form.menuItem = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.MENU_ITEM);
        form.close = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.CLOSE);
        form.on = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.ON);
        form.off = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.OFF);

        form.volumeControl = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.VOLUME_CONTROL[0]);
        form.audienceMode = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.AUDIENCE_MODE[0]);
        form.audienceTimer = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.AUDIENCE_TIMER[0]);
        form.familyFriendlyFilter = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.FAMILY_FRIENDLY_FILTER[0]);
        form.fullScreenMode = swfEditor.getDefineEditTextTag(Jackbox2CoreIds.GamePicker.FULL_SCREEN_MODE[0]);

        //Get scripts
        /*List<ScriptPack> scriptPacks =
                this.swfGamePicker.getAS3Packs();
        System.out.println("scripts : " + scriptPacks.size());
        for (ScriptPack scriptPack : scriptPacks) {
            int strings = scriptPack.abc.constants.getStringCount();
            System.out.println(strings);
            for (int i = 0; i < strings; i++) {
                String string = scriptPack.abc.constants.getString(i);
                System.out.println(string);
            }
        }*/

        String json = new ObjectMapper().writeValueAsString(form);
        return json;
    }

    public byte[] modifyData(String json) throws Exception {
        JackBox2CoreForm form = new ObjectMapper().readValue(json, JackBox2CoreForm.class);
        SwfEditor swfEditor = new SwfEditor(this.swfGamePicker);

        //Process all tags
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.BACK, form.back);
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.PHONE_OR_TABLET, form.phoneOrTablet);
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.FAMILY_MODE, form.familyMode);
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.OPTIONAL_CONTENT_FILTER, form.optionalContentFilter);
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.AUDIENCE, form.audience);
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.NON_PLAYER_CAN_JOIN, form.nonPlayerCanJoin);
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.MENU_ITEM, form.menuItem);
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.CLOSE, form.close);
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.ON, form.on);
        swfEditor.setDefineEditTextTag(Jackbox2CoreIds.GamePicker.OFF, form.off);

        swfEditor.setDefineEditTextTags(Jackbox2CoreIds.GamePicker.VOLUME_CONTROL, form.volumeControl);
        swfEditor.setDefineEditTextTags(Jackbox2CoreIds.GamePicker.AUDIENCE_MODE, form.audienceMode);
        swfEditor.setDefineEditTextTags(Jackbox2CoreIds.GamePicker.AUDIENCE_TIMER, form.audienceTimer);
        swfEditor.setDefineEditTextTags(Jackbox2CoreIds.GamePicker.FAMILY_FRIENDLY_FILTER, form.familyFriendlyFilter);
        swfEditor.setDefineEditTextTags(Jackbox2CoreIds.GamePicker.FULL_SCREEN_MODE, form.fullScreenMode);

        //Save SWF
        return swfEditor.apply();
    }
}
